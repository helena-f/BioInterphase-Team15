{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fzWoGbanx1pK","executionInfo":{"status":"ok","timestamp":1725734325707,"user_tz":240,"elapsed":17676,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"41ce16bb-9ffe-4248-f582-729c996f000d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["# prompt: mount google drive\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","source":["# prompt: read this file /content/drive/MyDrive/Team15-Biointerphase/Dataset/Supplementary Data/6.6/0120767/6.6/data/0-data/habsos_20220225.csv\n","\n","import pandas as pd\n","df = pd.read_csv('/content/drive/MyDrive/Team15-Biointerphase/Dataset/Supplementary Data/6.6/0120767/6.6/data/0-data/habsos_20220225.csv', low_memory = False)\n","print(df.columns)\n","print(df.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ClkJVwYpyCau","executionInfo":{"status":"ok","timestamp":1725735232752,"user_tz":240,"elapsed":1263,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"ca8dd4dc-933e-47f9-91ed-1f2fdd463159"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['STATE_ID', 'DESCRIPTION', 'LATITUDE', 'LONGITUDE', 'SAMPLE_DATE',\n","       'SAMPLE_DEPTH', 'GENUS', 'SPECIES', 'CATEGORY', 'CELLCOUNT',\n","       'CELLCOUNT_UNIT', 'CELLCOUNT_QA', 'SALINITY', 'SALINITY_UNIT',\n","       'SALINITY_QA', 'WATER_TEMP', 'WATER_TEMP_UNIT', 'WATER_TEMP_QA',\n","       'WIND_DIR', 'WIND_DIR_UNIT', 'WIND_DIR_QA', 'WIND_SPEED',\n","       'WIND_SPEED_UNIT', 'WIND_SPEED_QA', 'OBJECTID'],\n","      dtype='object')\n","(190339, 25)\n"]}]},{"cell_type":"code","source":["prev_date_stamps = df['SAMPLE_DATE']\n","print(prev_date_stamps)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Mv3ylIhy1wf","executionInfo":{"status":"ok","timestamp":1725734708226,"user_tz":240,"elapsed":170,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"13b9d10c-9088-4b6f-80d9-9f3ed32d2e40"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0         11-JAN-22 05.23.00.000000000 PM\n","1         11-JAN-22 05.07.00.000000000 PM\n","2         10-JAN-22 05.43.00.000000000 PM\n","3         10-JAN-22 05.24.00.000000000 PM\n","4         10-JAN-22 05.07.00.000000000 PM\n","                       ...               \n","190334    25-SEP-05 06.20.00.000000000 PM\n","190335    21-SEP-05 03.57.00.000000000 AM\n","190336    21-SEP-05 03.35.00.000000000 AM\n","190337    20-SEP-05 11.33.00.000000000 PM\n","190338    15-SEP-05 10.00.00.000000000 AM\n","Name: SAMPLE_DATE, Length: 190339, dtype: object\n"]}]},{"cell_type":"code","source":["# prompt: split all the entries in prev_date_stamps with .split(\" \")\n","\n","split_date_stamps = prev_date_stamps.str.split(\" \")\n","print(split_date_stamps)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"is9-m9Kgzech","executionInfo":{"status":"ok","timestamp":1725734730545,"user_tz":240,"elapsed":697,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"7e19abfd-0c9a-418b-c165-1bb2f74a2fa1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0         [11-JAN-22, 05.23.00.000000000, PM]\n","1         [11-JAN-22, 05.07.00.000000000, PM]\n","2         [10-JAN-22, 05.43.00.000000000, PM]\n","3         [10-JAN-22, 05.24.00.000000000, PM]\n","4         [10-JAN-22, 05.07.00.000000000, PM]\n","                         ...                 \n","190334    [25-SEP-05, 06.20.00.000000000, PM]\n","190335    [21-SEP-05, 03.57.00.000000000, AM]\n","190336    [21-SEP-05, 03.35.00.000000000, AM]\n","190337    [20-SEP-05, 11.33.00.000000000, PM]\n","190338    [15-SEP-05, 10.00.00.000000000, AM]\n","Name: SAMPLE_DATE, Length: 190339, dtype: object\n"]}]},{"cell_type":"code","source":["# prompt: make fixed_dates the first value in each value in prev_date_stamps. Change the date formatting from \"DD-MON-YY\" to \"YYYY/MM/DD\"\n","\n","import pandas as pd\n","\n","# Assuming 'split_date_stamps' is the Series containing the split date strings\n","\n","fixed_dates = split_date_stamps.str[0]  # Extract the first element (date)\n","\n","# Convert the date format\n","fixed_dates = pd.to_datetime(fixed_dates, format=\"%d-%b-%y\").dt.strftime(\"%Y/%m/%d\")\n","\n","print(fixed_dates)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9gVWR82Ozp2m","executionInfo":{"status":"ok","timestamp":1725734842927,"user_tz":240,"elapsed":1374,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"68a00c21-ea9d-4a1f-ebce-f9338880e126"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0         2022/01/11\n","1         2022/01/11\n","2         2022/01/10\n","3         2022/01/10\n","4         2022/01/10\n","             ...    \n","190334    2005/09/25\n","190335    2005/09/21\n","190336    2005/09/21\n","190337    2005/09/20\n","190338    2005/09/15\n","Name: SAMPLE_DATE, Length: 190339, dtype: object\n"]}]},{"cell_type":"code","source":["# prompt: add fixed_dates as a column to df\n","\n","df['fixed_dates'] = fixed_dates\n","print(df.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6mYsFSl_0VTh","executionInfo":{"status":"ok","timestamp":1725734950033,"user_tz":240,"elapsed":178,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"10edfcd8-46b7-4e8b-ba80-a6e011bcda86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["  STATE_ID              DESCRIPTION  LATITUDE  LONGITUDE  \\\n","0       AL  Orange Beach Waterfront  30.29480  -87.57510   \n","1       AL               Bear Point  30.30880  -87.52680   \n","2       AL            Alabama Point  30.27694  -87.54167   \n","3       AL          Florida Point A  30.26620  -87.55010   \n","4       AL             Cotton Bayou  30.26940  -87.58200   \n","\n","                       SAMPLE_DATE  SAMPLE_DEPTH    GENUS SPECIES  \\\n","0  11-JAN-22 05.23.00.000000000 PM           NaN  Karenia  brevis   \n","1  11-JAN-22 05.07.00.000000000 PM           NaN  Karenia  brevis   \n","2  10-JAN-22 05.43.00.000000000 PM           NaN  Karenia  brevis   \n","3  10-JAN-22 05.24.00.000000000 PM           NaN  Karenia  brevis   \n","4  10-JAN-22 05.07.00.000000000 PM           NaN  Karenia  brevis   \n","\n","       CATEGORY  CELLCOUNT  ... WATER_TEMP_UNIT  WATER_TEMP_QA  WIND_DIR  \\\n","0  not observed          0  ...          deg. C            1.0       NaN   \n","1  not observed          0  ...          deg. C            1.0       NaN   \n","2  not observed          0  ...          deg. C            1.0       NaN   \n","3  not observed          0  ...          deg. C            1.0       NaN   \n","4  not observed          0  ...          deg. C            1.0       NaN   \n","\n","  WIND_DIR_UNIT  WIND_DIR_QA  WIND_SPEED WIND_SPEED_UNIT  WIND_SPEED_QA  \\\n","0           NaN            9         NaN             NaN              9   \n","1           NaN            9         NaN             NaN              9   \n","2           NaN            9         NaN             NaN              9   \n","3           NaN            9         NaN             NaN              9   \n","4           NaN            9         NaN             NaN              9   \n","\n","   OBJECTID  fixed_dates  \n","0    939786   2022/01/11  \n","1    939785   2022/01/11  \n","2    939778   2022/01/10  \n","3    939775   2022/01/10  \n","4    939780   2022/01/10  \n","\n","[5 rows x 26 columns]\n"]}]},{"cell_type":"code","source":["# prompt: check if there is an entry where the description = South Marco Beach and fixed_dates = 2005/09/15\n","\n","# Check if there is an entry where the description = South Marco Beach and fixed_dates = 2005/09/15\n","result = df[(df['DESCRIPTION'] == 'South Marco Beach') & (df['fixed_dates'] == '2005/09/15')]\n","print(result)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hc41UDdR0dfO","executionInfo":{"status":"ok","timestamp":1725735016264,"user_tz":240,"elapsed":188,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"e882e070-2d44-4d50-a31d-c8d71d988100"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       STATE_ID        DESCRIPTION  LATITUDE  LONGITUDE  \\\n","120951       FL  South Marco Beach  25.91165  -81.72805   \n","\n","                            SAMPLE_DATE  SAMPLE_DEPTH    GENUS SPECIES  \\\n","120951  15-SEP-05 12.00.00.000000000 AM           0.5  Karenia  brevis   \n","\n","       CATEGORY  CELLCOUNT  ... WATER_TEMP_UNIT  WATER_TEMP_QA  WIND_DIR  \\\n","120951   medium     142000  ...             NaN            9.0       NaN   \n","\n","       WIND_DIR_UNIT  WIND_DIR_QA  WIND_SPEED WIND_SPEED_UNIT  WIND_SPEED_QA  \\\n","120951           NaN            9         NaN             NaN              9   \n","\n","        OBJECTID  fixed_dates  \n","120951     66180   2005/09/15  \n","\n","[1 rows x 26 columns]\n"]}]},{"cell_type":"code","source":["eight_point_eight = pd.read_csv('/content/drive/MyDrive/Team15-Biointerphase/Dataset/0120767/8.8/data/0-data/habsos_20240430.csv')\n","\n","print(eight_point_eight.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a5P0gIQU1rQe","executionInfo":{"status":"ok","timestamp":1725735299797,"user_tz":240,"elapsed":1790,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"46274a4b-f432-4716-df67-6af91b92681c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-18-d6f76b7f0813>:1: DtypeWarning: Columns (21,24) have mixed types. Specify dtype option on import or set low_memory=False.\n","  eight_point_eight = pd.read_csv('/content/drive/MyDrive/Team15-Biointerphase/Dataset/0120767/8.8/data/0-data/habsos_20240430.csv')\n"]},{"output_type":"stream","name":"stdout","text":["(211834, 28)\n"]}]},{"cell_type":"code","source":["# prompt: find all the entries in eight_point_eight where the sample date is after 2022. note that the dates are formatted yyyy/mm/dd\n","\n","# Convert 'SAMPLE_DATE' to datetime objects\n","eight_point_eight['SAMPLE_DATE'] = pd.to_datetime(eight_point_eight['SAMPLE_DATE'], format='%Y/%m/%d')\n","\n","# Filter for dates after 2022\n","filtered_df = eight_point_eight[eight_point_eight['SAMPLE_DATE'].dt.year >= 2022]\n","\n","print(filtered_df.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PovqTdMj1wEp","executionInfo":{"status":"ok","timestamp":1725735390818,"user_tz":240,"elapsed":153,"user":{"displayName":"Ashley Bao","userId":"13121060028520940354"}},"outputId":"1d07c366-873e-4be2-efe5-1ce05d34abcf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(15644, 28)\n"]}]}]}